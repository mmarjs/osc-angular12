{
  "Bid": {
    "createBid": {
      "api": {
        "method": "POST",
        "url": "/api/bids"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "bidDto",
          "description": "bidDto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BidDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BidDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findByBoatId": {
      "api": {
        "method": "GET",
        "url": "/api/bids/job/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BidDTO"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findById": {
      "api": {
        "method": "GET",
        "url": "/api/bids/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BidDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "acceptBid": {
      "api": {
        "method": "PUT",
        "url": "/api/bids/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "addItem": {
      "api": {
        "method": "POST",
        "url": "/api/bids/{id}/bid-item"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "body",
          "name": "dto",
          "description": "dto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BidItemDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BidItemDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "updateItem": {
      "api": {
        "method": "PUT",
        "url": "/api/bids/{id}/bid-item/{itemId}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "name": "itemId",
          "in": "path",
          "description": "itemId",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "body",
          "name": "dto",
          "description": "dto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BidItemDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BidItemDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "Boat": {
    "getBoats": {
      "api": {
        "method": "GET",
        "url": "/api/boats"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Response«BoatOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "addBoat": {
      "api": {
        "method": "POST",
        "url": "/api/boats"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "boatDTO",
          "description": "boatDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BoatInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BoatOutputDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "updateBoatInfo": {
      "api": {
        "method": "PUT",
        "url": "/api/boats"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "boatDTO",
          "description": "boatDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/BoatInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Boat"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "searchBoats": {
      "api": {
        "method": "GET",
        "url": "/api/boats/search"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "searchKey",
          "in": "query",
          "description": "searchKey",
          "required": false,
          "type": "string"
        },
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Response«BoatOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getBoatById": {
      "api": {
        "method": "GET",
        "url": "/api/boats/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/BoatOutputDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteBoatById": {
      "api": {
        "method": "DELETE",
        "url": "/api/boats/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "boatId",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    },
    "uploadImage": {
      "api": {
        "method": "POST",
        "url": "/api/boats/{id}/images"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      },
      "deprecated": true
    },
    "deleteImage": {
      "api": {
        "method": "DELETE",
        "url": "/api/boats/{id}/images/{imageId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "imageId",
          "in": "path",
          "description": "imageId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "deprecated": true
    },
    "uploadObject": {
      "api": {
        "method": "POST",
        "url": "/api/boats/{id}/objects"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteObject": {
      "api": {
        "method": "DELETE",
        "url": "/api/boats/{id}/objects/{objectId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "objectId",
          "in": "path",
          "description": "objectId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  },
  "Job": {
    "list": {
      "api": {
        "method": "GET",
        "url": "/api/jobs"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Response«JobDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "createJob": {
      "api": {
        "method": "POST",
        "url": "/api/jobs"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "job",
          "description": "job",
          "required": true,
          "schema": {
            "$ref": "#/definitions/JobDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/JobDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findByBoatId": {
      "api": {
        "method": "GET",
        "url": "/api/jobs/boat/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/JobDTO"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findRepairsByBoatId": {
      "api": {
        "method": "GET",
        "url": "/api/jobs/repairs/boat/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/JobDTO"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findSurveysByBoatId": {
      "api": {
        "method": "GET",
        "url": "/api/jobs/surveys/boat/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/JobDTO"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "findById": {
      "api": {
        "method": "GET",
        "url": "/api/jobs/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/JobDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "markAsAccepted": {
      "api": {
        "method": "PUT",
        "url": "/api/jobs/{id}/accepted"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "markAsCompleted": {
      "api": {
        "method": "PUT",
        "url": "/api/jobs/{id}/completed"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "uploadImage": {
      "api": {
        "method": "POST",
        "url": "/api/jobs/{id}/images"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      },
      "deprecated": true
    },
    "deleteImage": {
      "api": {
        "method": "DELETE",
        "url": "/api/jobs/{id}/images/{imageId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "imageId",
          "in": "path",
          "description": "imageId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "deprecated": true
    },
    "uploadObject": {
      "api": {
        "method": "POST",
        "url": "/api/jobs/{id}/objects"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteObject": {
      "api": {
        "method": "DELETE",
        "url": "/api/jobs/{id}/objects/{objectId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "objectId",
          "in": "path",
          "description": "objectId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  },
  "Notification": {
    "getNotifications": {
      "api": {
        "method": "GET",
        "url": "/api/notifications"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "createNotification": {
      "api": {
        "method": "POST",
        "url": "/api/notifications"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "notificationDTO",
          "description": "notificationDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/NotificationDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "updateNotification": {
      "api": {
        "method": "PUT",
        "url": "/api/notifications"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "notificationDTO",
          "description": "notificationDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/NotificationDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getNotificationsByUserId": {
      "api": {
        "method": "GET",
        "url": "/api/notifications/user/{userId}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        },
        {
          "name": "userId",
          "in": "path",
          "description": "userId",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getNotificationById": {
      "api": {
        "method": "GET",
        "url": "/api/notifications/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/NotificationDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteNotification": {
      "api": {
        "method": "DELETE",
        "url": "/api/notifications/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK"
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  },
  "Stripe": {
    "charge": {
      "api": {
        "method": "POST",
        "url": "/api/payment/charge"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "chargeRequest",
          "description": "chargeRequest",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ChargeRequestDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Charge"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "Payment": {
    "deposit": {
      "api": {
        "method": "POST",
        "url": "/api/payments/deposit"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "depositDTO",
          "description": "depositDTO",
          "required": false,
          "schema": {
            "$ref": "#/definitions/DepositDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/PaymentDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "charge": {
      "api": {
        "method": "POST",
        "url": "/api/payments/jobs/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/PaymentDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "refund": {
      "api": {
        "method": "POST",
        "url": "/api/payments/jobs/{id}/refund"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "body",
          "name": "refundDTO",
          "description": "refundDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/RefundDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/PaymentDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "registerChargeMethod": {
      "api": {
        "method": "POST",
        "url": "/api/payments/register-charge/{token}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "description": "token",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "registerPayoutMethod": {
      "api": {
        "method": "POST",
        "url": "/api/payments/register-payout/{token}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "description": "token",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    }
  },
  "Shipyard": {
    "getShipyards": {
      "api": {
        "method": "GET",
        "url": "/api/shipyards"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Shipyard info was successfully retrieved.",
          "schema": {
            "$ref": "#/definitions/Response«ShipyardOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "addShipyard": {
      "api": {
        "method": "POST",
        "url": "/api/shipyards"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "dto",
          "description": "dto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ShipyardInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/ShipyardOutputDTO"
          }
        },
        "201": {
          "description": "Shipyard creation was successful",
          "schema": {
            "$ref": "#/definitions/ShipyardOutputDTO"
          }
        },
        "400": {
          "description": "Bad request. The shipyard ID value was set or other error condition."
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "updateShipyardInfo": {
      "api": {
        "method": "PUT",
        "url": "/api/shipyards"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "shipyardDTO",
          "description": "shipyardDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ShipyardInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "204": {
          "description": "Shipyard info update was successful",
          "schema": {
            "type": "object"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "searchShipyard": {
      "api": {
        "method": "GET",
        "url": "/api/shipyards/search"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "searchKey",
          "in": "query",
          "description": "searchKey",
          "required": false,
          "type": "string"
        },
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Shipyard info was successfully retrieved.",
          "schema": {
            "$ref": "#/definitions/Response«ShipyardOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getShipyardsById": {
      "api": {
        "method": "GET",
        "url": "/api/shipyards/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "Shipyard info was successfully retrieved.",
          "schema": {
            "$ref": "#/definitions/ShipyardOutputDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteShipyardById": {
      "api": {
        "method": "DELETE",
        "url": "/api/shipyards/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "204": {
          "description": "Shipyard info was successfully deleted.",
          "schema": {
            "type": "object"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    },
    "uploadImage": {
      "api": {
        "method": "POST",
        "url": "/api/shipyards/{id}/images"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      },
      "deprecated": true
    },
    "deleteImage": {
      "api": {
        "method": "DELETE",
        "url": "/api/shipyards/{id}/images/{imageId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "imageId",
          "in": "path",
          "description": "imageId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "deprecated": true
    },
    "uploadObject": {
      "api": {
        "method": "POST",
        "url": "/api/shipyards/{id}/objects"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteObject": {
      "api": {
        "method": "DELETE",
        "url": "/api/shipyards/{id}/objects/{objectId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "objectId",
          "in": "path",
          "description": "objectId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  },
  "Surveyor": {
    "getSurveyors": {
      "api": {
        "method": "GET",
        "url": "/api/surveyors"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Response«SurveyorOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "addSurveyor": {
      "api": {
        "method": "POST",
        "url": "/api/surveyors"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "dto",
          "description": "dto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SurveyorInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/SurveyorOutputDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "updateSurveyorInfo": {
      "api": {
        "method": "PUT",
        "url": "/api/surveyors"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "dto",
          "description": "dto",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SurveyorInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Surveyor"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "searchSurveyor": {
      "api": {
        "method": "GET",
        "url": "/api/surveyors/search"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "searchKey",
          "in": "query",
          "description": "searchKey",
          "required": false,
          "type": "string"
        },
        {
          "in": "body",
          "name": "pageable",
          "description": "pageable",
          "required": false,
          "schema": {
            "$ref": "#/definitions/Pageable"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/Response«SurveyorOutputDTO»"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getSurveyorById": {
      "api": {
        "method": "GET",
        "url": "/api/surveyors/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/SurveyorOutputDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteSurveyorById": {
      "api": {
        "method": "DELETE",
        "url": "/api/surveyors/{id}"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "200": {
          "description": "OK"
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    },
    "uploadImage": {
      "api": {
        "method": "POST",
        "url": "/api/surveyors/{id}/images"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      },
      "deprecated": true
    },
    "deleteImage": {
      "api": {
        "method": "DELETE",
        "url": "/api/surveyors/{id}/images/{imageId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "imageId",
          "in": "path",
          "description": "imageId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "deprecated": true
    },
    "uploadObject": {
      "api": {
        "method": "POST",
        "url": "/api/surveyors/{id}/objects"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteObject": {
      "api": {
        "method": "DELETE",
        "url": "/api/surveyors/{id}/objects/{objectId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "objectId",
          "in": "path",
          "description": "objectId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  },
  "User": {
    "updateUser": {
      "api": {
        "method": "PUT",
        "url": "/api/users"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "userDTO",
          "description": "userDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserUpdateDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "204": {
          "description": "User info update was successful",
          "schema": {
            "type": "object"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "isAuthenticated": {
      "api": {
        "method": "GET",
        "url": "/api/users/authenticate"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "string"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "changePassword": {
      "api": {
        "method": "POST",
        "url": "/api/users/change-password"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "password",
          "description": "password",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getCurrentUser": {
      "api": {
        "method": "GET",
        "url": "/api/users/current"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/User"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "login": {
      "api": {
        "method": "POST",
        "url": "/api/users/login"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "userFormDTO",
          "description": "userFormDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserFormDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "getLogOutUrl": {
      "api": {
        "method": "GET",
        "url": "/api/users/logout-url"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "responses": {
        "200": {
          "description": "Successfully retrieved logout URL",
          "schema": {
            "$ref": "#/definitions/LogoutUrlDTO"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Accessing the resource you were trying to reach is forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "registerAccount": {
      "api": {
        "method": "POST",
        "url": "/api/users/register"
      },
      "consumes": "application/json",
      "produces": "*/*",
      "parameters": [
        {
          "in": "body",
          "name": "userInputDTO",
          "description": "userInputDTO",
          "required": true,
          "schema": {
            "$ref": "#/definitions/UserInputDTO"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object"
          }
        },
        "201": {
          "description": "User registration was successful",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad request. User may already exist or validation errors."
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "uploadImage": {
      "api": {
        "method": "POST",
        "url": "/api/users/{id}/images"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      },
      "deprecated": true
    },
    "deleteImage": {
      "api": {
        "method": "DELETE",
        "url": "/api/users/{id}/images/{imageId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "imageId",
          "in": "path",
          "description": "imageId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "deprecated": true
    },
    "uploadObject": {
      "api": {
        "method": "POST",
        "url": "/api/users/{id}/objects"
      },
      "consumes": "multipart/form-data",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "file",
          "in": "formData",
          "description": "file",
          "required": true,
          "type": "file"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "$ref": "#/definitions/StoredObjectDescriptorDTO"
          }
        },
        "201": {
          "description": "Created"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Not Found"
        }
      }
    },
    "deleteObject": {
      "api": {
        "method": "DELETE",
        "url": "/api/users/{id}/objects/{objectId}"
      },
      "consumes": "application/json",
      "produces": "application/json",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "containerId",
          "required": true,
          "type": "string"
        },
        {
          "name": "objectId",
          "in": "path",
          "description": "objectId",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        },
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      }
    }
  }
}
